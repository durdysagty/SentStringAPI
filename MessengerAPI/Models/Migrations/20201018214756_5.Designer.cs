// <auto-generated />
using System;
using MessengerAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MessengerAPI.Models.Migrations
{
    [DbContext(typeof(MessengerAPIDbContext))]
    [Migration("20201018214756_5")]
    partial class _5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MessengerAPI.Models.Confirmations", b =>
                {
                    b.Property<string>("ToConfirm")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Confirmator")
                        .HasColumnType("int");

                    b.HasKey("ToConfirm");

                    b.ToTable("Confirmations");
                });

            modelBuilder.Entity("MessengerAPI.Models.Dialogues", b =>
                {
                    b.Property<int>("IndividualId")
                        .HasColumnType("int");

                    b.Property<int>("InterlocutorId")
                        .HasColumnType("int");

                    b.HasKey("IndividualId", "InterlocutorId");

                    b.ToTable("Dialogues");
                });

            modelBuilder.Entity("MessengerAPI.Models.DialoguesMessages", b =>
                {
                    b.Property<int>("DialogueIndividualId")
                        .HasColumnType("int");

                    b.Property<int>("DialogueInterlocutorId")
                        .HasColumnType("int");

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.HasKey("DialogueIndividualId", "DialogueInterlocutorId", "MessageId");

                    b.HasIndex("MessageId");

                    b.ToTable("DialoguesMessages");
                });

            modelBuilder.Entity("MessengerAPI.Models.Friends", b =>
                {
                    b.Property<int>("IndividualId")
                        .HasColumnType("int");

                    b.Property<int>("FriendId")
                        .HasColumnType("int");

                    b.HasKey("IndividualId", "FriendId");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("MessengerAPI.Models.Individuals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhoneConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.ToTable("Individuals");
                });

            modelBuilder.Entity("MessengerAPI.Models.Messages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MessengerAPI.Models.Dialogues", b =>
                {
                    b.HasOne("MessengerAPI.Models.Individuals", "Individual")
                        .WithMany("Dialogues")
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MessengerAPI.Models.DialoguesMessages", b =>
                {
                    b.HasOne("MessengerAPI.Models.Messages", "Message")
                        .WithMany("DialoguesMessages")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MessengerAPI.Models.Dialogues", "Dialogue")
                        .WithMany("DialoguesMessages")
                        .HasForeignKey("DialogueIndividualId", "DialogueInterlocutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MessengerAPI.Models.Friends", b =>
                {
                    b.HasOne("MessengerAPI.Models.Individuals", "Individual")
                        .WithMany("Friends")
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
